source('~/Documents/first_kick/wtw_timing/expDataAnalysis.R', echo=TRUE)
# plot AUC in two conditions
library("ggpubr")
blockData %>% ggplot(aes(condition, AUC)) + geom_boxplot() +
geom_dotplot(binaxis='y', stackdir='center', aes(fill = condition)) +
scale_fill_manual(values = conditionColors) +
xlab("") + ylab("Average WTW(s)") + myTheme +
stat_compare_means(comparisons = list(c("HP", "LP")),
aes(label = ..p.signif..), label.x = 1.5, symnum.args= symnum.args,
bracket.size = 1, size = 6) + ylim(c(0, 20))
dir.create("figures")
dir.create("figures/expDataAnalysis")
ggsave(sprintf("figures/expDataAnalysis/zTruc_AUC.png"), width = 4, height = 3)
# plot wtw
plotData = data.frame(wtw = unlist(timeWTW_), time = rep(tGrid, n),
condition = rep(blockData$condition, each = length(tGrid))) %>% group_by(condition, time) %>%
summarise(mean = mean(wtw), se = sd(wtw) / sqrt(length(wtw)), min = mean - se, max = mean + se)
policy = data.frame(condition = c("HP", "LP"), wt = unlist(optimWaitTimes))
plotData %>% ggplot(aes(time, mean, color = condition,  fill = condition)) +
geom_ribbon(aes(ymin=min, ymax=max), colour=NA, alpha = 0.3) +
geom_line(size = 1) + facet_wrap(~condition, scales = "free") +
scale_color_manual(values = conditionColors) + scale_fill_manual(values = conditionColors) +
xlab("Cumulative task time (min)") +
scale_x_continuous(breaks = seq(0, max(tGrid), by = 60 * 3),
label = seq(0, max(tGrid), by = 60 * 3) / 60) +
ylab("Willingness to wait (s)") +
geom_hline(data = policy, aes(yintercept = wt, color = condition), linetype = "dotted", size = 1.5) +
myTheme + ylim(c(0, 18))
ggsave("figures/expDataAnalysis/zTruc_wtw_timecourse.png", width = 6, height = 3)
# plot survival curve
data.frame(kmsc = unlist(kmOnGrid_), time = rep(kmGrid, n * nBlock),
condition = factor(rep(blockData$condition, each = length(kmGrid))), levels = conditions) %>%
group_by(condition, time) %>%
summarise(mean = mean(kmsc), se = sd(kmsc) / sqrt(length(kmsc)), min = mean - se, max = mean + se) %>%
ggplot(aes(time, mean, color = condition, fill = condition)) +
geom_ribbon(aes(ymin=min, ymax=max), colour=NA, alpha = 0.3)+
geom_line(size = 1.5) + myTheme + scale_fill_manual(values = conditionColors) +
xlab("Elapsed time (s)") + ylab("Survival rate") + scale_color_manual(values = conditionColors)
ggsave("figures/expDataAnalysis/zTruc_kmsc_timecourse.png", width = 5, height = 4)
# learning curve
trialReRareMove_ = lapply(1 : (nBlock * n), function(i){
movAve(trialReRate_[[i]], 11)
})
timeReRate_ = lapply(1 :  (nBlock * n),
function(i) trial2sec(trialReRareMove_[[i]], trialEndTime_[[i]], tGrid))
data.frame(value = unlist(timeReRate_), time = rep(tGrid, n * nBlock),
condition = factor(rep(blockData$condition, each = length(tGrid)),  levels = conditions)) %>%
group_by(condition, time) %>%
summarise(mean = mean(value), se = sd(value) / sqrt(length(value)), min = mean - se, max = mean + se) %>%
ggplot(aes(time, mean, color = condition, fill = condition)) +
geom_ribbon(aes(ymin=min, ymax=max), colour=NA, alpha = 0.3)+
geom_line(size = 1.5) + myTheme + scale_fill_manual(values = conditionColors) +
xlab("Elapsed time (s)") + ylab("Reward rate") +
scale_color_manual(values = conditionColors)
ggsave("figures/expDataAnalysis/zTruc_reRate.png", width = 4, height = 3.5)
# plot LP AUC against HP AUC, to see adapation and correlation
data.frame(HPAUC = blockData[blockData$condition == "HP", "AUC"],
LPAUC = blockData[blockData$condition == "LP", "AUC"]) %>%
ggplot(aes(LPAUC, HPAUC)) + geom_point(size = 2) +
geom_abline(intercept = 0, slope = 1) +
xlim(c(0, min(tMaxs)))+ ylim(c(0, min(tMaxs))) +
xlab("LP AUC (s)") + ylab("HP AUC (s)") +
myTheme
ggsave("figures/expDataAnalysis/zTruc_AUC_Cmp.png", width = 3.5, height = 3.5)
hist(nExclude)
n
