simFun = getSimFun(modelName)
# initialize outputs
auc_ = vector(length = nSim)
auc1_ = vector(length = nSim)
auc2_ = vector(length = nSim)
auc3_ = vector(length = nSim)
wtw_ = matrix(NA, nrow = length(tGrid) * length(cb), ncol = nSim)
reRate_ = vector(length = nSim)
set.seed(i)
thisTrialData = simFun(paras, cb, blockDuration)
thisTrialData$Qwaits = NULL
thisTrialData = as.data.frame(thisTrialData)
kmscResults = kmsc(thisTrialData, min(tMaxs), "", F, kmGrid)
auc_[i] = kmscResults$auc
wtwtsResults = wtwTS(thisTrialData, tGrid, min(tMaxs), "", F )
wtw_[,i] = wtwtsResults$timeWTW
junk = nrow(thisTrialData)
reRate_[i] = mean(thisTrialData$reRates[(junk - 10) : junk])
tempt = lapply(1:3, function(i) kmsc(thisTrialData[thisTrialData$trialNum %in% ((i - 1)*nT / 3 + 1) : (i * nT / 3),],
min(tMaxs), "", F, kmGrid))
((i - 1)*nT / 3 + 1) : (i * nT / 3)
thisTrialData[thisTrialData$trialNum %in% ((i - 1)*nT / 3 + 1) : (i * nT / 3),]
kmsc(thisTrialData[thisTrialData$trialNum %in% ((i - 1)*nT / 3 + 1) : (i * nT / 3),],
min(tMaxs), "", F, kmGrid
)
i = 2
(i - 1)*nT / 3 + 1)
(i - 1)*nT / 3 + 1)
(i - 1)*nT / 3 + 1
lapply(1:3, function(i) kmsc(thisTrialData[thisTrialData$trialNum %in% ((i - 1)*nT / 3 + 1) : (i * nT / 3),],
min(tMaxs), "", F, kmGrid))
i = 2
kmsc(thisTrialData[thisTrialData$trialNum %in% ((i - 1)*nT / 3 + 1) : (i * nT / 3),],
min(tMaxs), "", F, kmGrid)
i = 3
kmsc(thisTrialData[thisTrialData$trialNum %in% ((i - 1)*nT / 3 + 1) : (i * nT / 3),],
min(tMaxs), "", F, kmGrid)
thisTrialData$trialNum
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R')
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R')
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R')
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R', echo=TRUE)
for(pIdx in 1 : (nPara-1)){
for(cutIdx in 1 : nCut){
paras = medianParas
paras[pIdx] = paraSamples[cutIdx,pIdx]
tempt = simulateUnitSingle(paras, nSim, modelName, cb, blockDuration)
auc_[cutIdx, pIdx] = tempt$auc
aucSD_[cutIdx, pIdx] = tempt$aucSD
wtw_[ , cutIdx, pIdx] = tempt$wtw
wtwSD_[ , cutIdx, pIdx] = tempt$wtwSD
auc1_[cutIdx, pIdx] = tempt$auc1
auc2_[cutIdx, pIdx] = tempt$auc2
auc3_[cutIdx, pIdx] = tempt$auc3
aucSD1_[cutIdx, pIdx] = tempt$aucSD1
aucSD2_[cutIdx, pIdx] = tempt$aucSD2
aucSD3_[cutIdx, pIdx] = tempt$aucSD3
reRate_[cutIdx, pIdx] = tempt$reRate
}
}
tempt = lapply(1:3, function(i) kmsc(thisTrialData[thisTrialData$sellTime < blockDuration /3 * i
&thisTrialData$sellTime >= blockDuration /3 * (i-1) ,],
min(tMaxs), "", F, kmGrid))
blockDuration /3 * i
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R')
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R')
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R', echo=TRUE)
tempt = lapply(1:3, function(i) kmsc(thisTrialData[thisTrialData$sellTime < blockDuration /3 * i * 60
&thisTrialData$sellTime >= blockDuration /3 * (i-1)*60,],
min(tMaxs), "", F, kmGrid))
for(pIdx in 1 : (nPara-1)){
for(cutIdx in 1 : nCut){
paras = medianParas
paras[pIdx] = paraSamples[cutIdx,pIdx]
tempt = simulateUnitSingle(paras, nSim, modelName, cb, blockDuration)
auc_[cutIdx, pIdx] = tempt$auc
aucSD_[cutIdx, pIdx] = tempt$aucSD
wtw_[ , cutIdx, pIdx] = tempt$wtw
wtwSD_[ , cutIdx, pIdx] = tempt$wtwSD
auc1_[cutIdx, pIdx] = tempt$auc1
auc2_[cutIdx, pIdx] = tempt$auc2
auc3_[cutIdx, pIdx] = tempt$auc3
aucSD1_[cutIdx, pIdx] = tempt$aucSD1
aucSD2_[cutIdx, pIdx] = tempt$aucSD2
aucSD3_[cutIdx, pIdx] = tempt$aucSD3
reRate_[cutIdx, pIdx] = tempt$reRate
}
}
tempt$auc
auc_[cutIdx, pIdx]
cutIdx
# initialize
auc_ = array(NA, dim = c(nCut, nPara - 1))
wtw_ = array(NA, dim = c(length(tGrid) * length(cb), nCut, nPara - 1))
aucSD_ = array(NA, dim = c(nCut, nPara - 1))
wtwSD_ = array(NA, dim = c(length(tGrid) * length(cb), nCut, nPara - 1))
reRate_ = array(NA, dim = c(nCut, nPara - 1))
auc1_ = array(NA, dim = c(nCut, nPara - 1))
auc2_ = array(NA, dim = c(nCut, nPara - 1))
auc3_ = array(NA, dim = c(nCut, nPara - 1))
auc1SD_ = array(NA, dim = c(nCut, nPara - 1))
auc2SD_ = array(NA, dim = c(nCut, nPara - 1))
auc3SD_ = array(NA, dim = c(nCut, nPara - 1))
for(pIdx in 1 : (nPara-1)){
for(cutIdx in 1 : nCut){
paras = medianParas
paras[pIdx] = paraSamples[cutIdx,pIdx]
tempt = simulateUnitSingle(paras, nSim, modelName, cb, blockDuration)
auc_[cutIdx, pIdx] = tempt$auc
aucSD_[cutIdx, pIdx] = tempt$aucSD
wtw_[ , cutIdx, pIdx] = tempt$wtw
wtwSD_[ , cutIdx, pIdx] = tempt$wtwSD
auc1_[cutIdx, pIdx] = tempt$auc1
auc2_[cutIdx, pIdx] = tempt$auc2
auc3_[cutIdx, pIdx] = tempt$auc3
aucSD1_[cutIdx, pIdx] = tempt$aucSD1
aucSD2_[cutIdx, pIdx] = tempt$aucSD2
aucSD3_[cutIdx, pIdx] = tempt$aucSD3
reRate_[cutIdx, pIdx] = tempt$reRate
}
}
for(pIdx in 1 : (nPara-1)){
for(cutIdx in 1 : nCut){
paras = medianParas
paras[pIdx] = paraSamples[cutIdx,pIdx]
tempt = simulateUnitSingle(paras, nSim, modelName, cb, blockDuration)
auc_[cutIdx, pIdx] = tempt$auc
aucSD_[cutIdx, pIdx] = tempt$aucSD
wtw_[ , cutIdx, pIdx] = tempt$wtw
wtwSD_[ , cutIdx, pIdx] = tempt$wtwSD
auc1_[cutIdx, pIdx] = tempt$auc1
auc2_[cutIdx, pIdx] = tempt$auc2
auc3_[cutIdx, pIdx] = tempt$auc3
aucSD1_[cutIdx, pIdx] = tempt$aucSD1
aucSD2_[cutIdx, pIdx] = tempt$aucSD2
aucSD3_[cutIdx, pIdx] = tempt$aucSD3
reRate_[cutIdx, pIdx] = tempt$reRate
}
}
aucSD1_ = array(NA, dim = c(nCut, nPara - 1))
aucSD2_ = array(NA, dim = c(nCut, nPara - 1))
aucSD3_ = array(NA, dim = c(nCut, nPara - 1))
for(pIdx in 1 : (nPara-1)){
for(cutIdx in 1 : nCut){
paras = medianParas
paras[pIdx] = paraSamples[cutIdx,pIdx]
tempt = simulateUnitSingle(paras, nSim, modelName, cb, blockDuration)
auc_[cutIdx, pIdx] = tempt$auc
aucSD_[cutIdx, pIdx] = tempt$aucSD
wtw_[ , cutIdx, pIdx] = tempt$wtw
wtwSD_[ , cutIdx, pIdx] = tempt$wtwSD
auc1_[cutIdx, pIdx] = tempt$auc1
auc2_[cutIdx, pIdx] = tempt$auc2
auc3_[cutIdx, pIdx] = tempt$auc3
aucSD1_[cutIdx, pIdx] = tempt$aucSD1
aucSD2_[cutIdx, pIdx] = tempt$aucSD2
aucSD3_[cutIdx, pIdx] = tempt$aucSD3
reRate_[cutIdx, pIdx] = tempt$reRate
}
}
tempt$aucSD3
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R')
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R', echo=TRUE)
for(pIdx in 1 : (nPara-1)){
for(cutIdx in 1 : nCut){
paras = medianParas
paras[pIdx] = paraSamples[cutIdx,pIdx]
tempt = simulateUnitSingle(paras, nSim, modelName, cb, blockDuration)
auc_[cutIdx, pIdx] = tempt$auc
aucSD_[cutIdx, pIdx] = tempt$aucSD
wtw_[ , cutIdx, pIdx] = tempt$wtw
wtwSD_[ , cutIdx, pIdx] = tempt$wtwSD
auc1_[cutIdx, pIdx] = tempt$auc1
auc2_[cutIdx, pIdx] = tempt$auc2
auc3_[cutIdx, pIdx] = tempt$auc3
aucSD1_[cutIdx, pIdx] = tempt$aucSD1
aucSD2_[cutIdx, pIdx] = tempt$aucSD2
aucSD3_[cutIdx, pIdx] = tempt$aucSD3
reRate_[cutIdx, pIdx] = tempt$reRate
}
}
# reorganizd the data
junk = paraNames[1:5]; junk[2] = "nega"
colnames(auc_) = junk
colnames(aucSD_) = junk
junk1 = auc_ %>% as_tibble() %>%
mutate("percentile" = rep(1:nCut, 1)) %>%
gather(key = para, value = auc, -percentile) %>%
mutate(para = factor(para, levels = junk))
junk2 =  aucSD_ %>% as_tibble() %>%
mutate("percentile" = rep(1:nCut, 1)) %>%
gather(key = para, value = aucSD, -percentile) %>%
mutate(para = factor(para, levels = junk))
data.frame(junk1, aucSD = junk2$aucSD) %>%
mutate(min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(percentile, auc)) + geom_point() +
geom_errorbar(aes(ymin = min, ymax = max)) + facet_grid(~para) +
ylab("AUC (s)") + xlab("Value (a.u.)") + ggtitle(cb[1]) +
myTheme
# I would like to know how much the results change
dimnames(wtw_) = list(tGrid + 1, 1:nCut, junk)
library("driver")
gather_array(wtw_, wtw, "t", "paraValue", "para") %>%
mutate(paraValue = as.factor(paraValue),
para = factor(para,labels = junk)) %>%
ggplot(aes(t, wtw,  color = paraValue)) + geom_line() +
facet_wrap(para~.)
# plot the change the wtw1 in the first, mindle and last 20 seconds
wtw1 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[1:60]))
wtw2 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[61:120]))
wtw3 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[121: 181]))
wtwSD1 = apply(wtwSD_, MARGIN = c(2,3), FUN = function(x) mean(x[1:60]))
wtwSD2 = apply(wtwSD_, MARGIN = c(2,3), FUN = function(x) mean(x[61:120]))
wtwSD3 = apply(wtwSD_, MARGIN = c(2,3), FUN = function(x) mean(x[121: 181]))
data.frame(wtw = c(as.vector(wtw1),as.vector(wtw2),as.vector(wtw3)),
wtwSD = c(as.vector(wtwSD1), as.vector(wtwSD2), as.vector(wtwSD3)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = wtw - wtwSD, max = wtw + wtwSD) %>%
ggplot(aes(time, wtw, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
auc1_
wtw1
data.frame(auc = c(as.vector(auc1),as.vector(auc2),as.vector(auc3)),
aucSD = c(as.vector(aucSD1), as.vector(aucSD2), as.vector(aucSD3)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = wtw - wtwSD, max = wtw + wtwSD) %>%
ggplot(aes(time, auc, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
data.frame(auc = c(as.vector(auc1_),as.vector(auc2_),as.vector(auc3_)),
aucSD = c(as.vector(aucSD1_), as.vector(aucSD2_), as.vector(aucSD3_)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = wtw - wtwSD, max = wtw + wtwSD) %>%
ggplot(aes(time, auc, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
data.frame(auc = c(as.vector(auc1_),as.vector(auc2_),as.vector(auc3_)),
aucSD = c(as.vector(aucSD1_), as.vector(aucSD2_), as.vector(aucSD3_)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(time, auc, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
auc3_
thisTrialData$sellTime
blockDuration
i = 3
blockDuration /3 * (i-1)*60
tempt$aucSD3
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R')
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R', echo=TRUE)
# initialize
auc_ = array(NA, dim = c(nCut, nPara - 1))
wtw_ = array(NA, dim = c(length(tGrid) * length(cb), nCut, nPara - 1))
aucSD_ = array(NA, dim = c(nCut, nPara - 1))
wtwSD_ = array(NA, dim = c(length(tGrid) * length(cb), nCut, nPara - 1))
reRate_ = array(NA, dim = c(nCut, nPara - 1))
auc1_ = array(NA, dim = c(nCut, nPara - 1))
auc2_ = array(NA, dim = c(nCut, nPara - 1))
auc3_ = array(NA, dim = c(nCut, nPara - 1))
aucSD1_ = array(NA, dim = c(nCut, nPara - 1))
aucSD2_ = array(NA, dim = c(nCut, nPara - 1))
aucSD3_ = array(NA, dim = c(nCut, nPara - 1))
for(pIdx in 1 : (nPara-1)){
for(cutIdx in 1 : nCut){
paras = medianParas
paras[pIdx] = paraSamples[cutIdx,pIdx]
tempt = simulateUnitSingle(paras, nSim, modelName, cb, blockDuration)
auc_[cutIdx, pIdx] = tempt$auc
aucSD_[cutIdx, pIdx] = tempt$aucSD
wtw_[ , cutIdx, pIdx] = tempt$wtw
wtwSD_[ , cutIdx, pIdx] = tempt$wtwSD
auc1_[cutIdx, pIdx] = tempt$auc1
auc2_[cutIdx, pIdx] = tempt$auc2
auc3_[cutIdx, pIdx] = tempt$auc3
aucSD1_[cutIdx, pIdx] = tempt$aucSD1
aucSD2_[cutIdx, pIdx] = tempt$aucSD2
aucSD3_[cutIdx, pIdx] = tempt$aucSD3
reRate_[cutIdx, pIdx] = tempt$reRate
}
}
# reorganizd the data
junk = paraNames[1:5]; junk[2] = "nega"
colnames(auc_) = junk
colnames(aucSD_) = junk
junk1 = auc_ %>% as_tibble() %>%
mutate("percentile" = rep(1:nCut, 1)) %>%
gather(key = para, value = auc, -percentile) %>%
mutate(para = factor(para, levels = junk))
junk2 =  aucSD_ %>% as_tibble() %>%
mutate("percentile" = rep(1:nCut, 1)) %>%
gather(key = para, value = aucSD, -percentile) %>%
mutate(para = factor(para, levels = junk))
data.frame(junk1, aucSD = junk2$aucSD) %>%
mutate(min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(percentile, auc)) + geom_point() +
geom_errorbar(aes(ymin = min, ymax = max)) + facet_grid(~para) +
ylab("AUC (s)") + xlab("Value (a.u.)") + ggtitle(cb[1]) +
myTheme
# I would like to know how much the results change
dimnames(wtw_) = list(tGrid + 1, 1:nCut, junk)
library("driver")
gather_array(wtw_, wtw, "t", "paraValue", "para") %>%
mutate(paraValue = as.factor(paraValue),
para = factor(para,labels = junk)) %>%
ggplot(aes(t, wtw,  color = paraValue)) + geom_line() +
facet_wrap(para~.)
# plot the change the wtw1 in the first, mindle and last 20 seconds
wtw1 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[1:60]))
wtw2 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[61:120]))
wtw3 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[121: 181]))
wtwSD1 = apply(wtwSD_, MARGIN = c(2,3), FUN = function(x) mean(x[1:60]))
wtwSD2 = apply(wtwSD_, MARGIN = c(2,3), FUN = function(x) mean(x[61:120]))
wtwSD3 = apply(wtwSD_, MARGIN = c(2,3), FUN = function(x) mean(x[121: 181]))
data.frame(wtw = c(as.vector(wtw1),as.vector(wtw2),as.vector(wtw3)),
wtwSD = c(as.vector(wtwSD1), as.vector(wtwSD2), as.vector(wtwSD3)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = wtw - wtwSD, max = wtw + wtwSD) %>%
ggplot(aes(time, wtw, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
data.frame(auc = c(as.vector(auc1_),as.vector(auc2_),as.vector(auc3_)),
aucSD = c(as.vector(aucSD1_), as.vector(aucSD2_), as.vector(aucSD3_)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(time, auc, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
auc1_
wtw1
medianParas
reRate
reRate_
optimRewardRates
data.frame(auc = c(as.vector(auc1_),as.vector(auc2_),as.vector(auc3_)),
aucSD = c(as.vector(aucSD1_), as.vector(aucSD2_), as.vector(aucSD3_)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = junk),
paraValue = factor(paraValue),
min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(time, auc, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
data.frame(auc = c(as.vector(auc1_),as.vector(auc2_),as.vector(auc3_)),
aucSD = c(as.vector(aucSD1_), as.vector(aucSD2_), as.vector(aucSD3_)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(time, auc, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
source('~/Documents/first_kick/wtw_timing/subFxs/simulationFxs.R')
# simulate for a single condition
# determine simFun
modelName = "RL2"
blockDuration = 15
cb = c("HP")
nSim = 10
tGrid = seq(0, blockDuration * 60, by = 5)
# initialize
auc_ = array(NA, dim = c(nCut, nPara - 1))
wtw_ = array(NA, dim = c(length(tGrid) * length(cb), nCut, nPara - 1))
aucSD_ = array(NA, dim = c(nCut, nPara - 1))
wtwSD_ = array(NA, dim = c(length(tGrid) * length(cb), nCut, nPara - 1))
reRate_ = array(NA, dim = c(nCut, nPara - 1))
auc1_ = array(NA, dim = c(nCut, nPara - 1))
auc2_ = array(NA, dim = c(nCut, nPara - 1))
auc3_ = array(NA, dim = c(nCut, nPara - 1))
aucSD1_ = array(NA, dim = c(nCut, nPara - 1))
aucSD2_ = array(NA, dim = c(nCut, nPara - 1))
aucSD3_ = array(NA, dim = c(nCut, nPara - 1))
for(pIdx in 1 : (nPara-1)){
for(cutIdx in 1 : nCut){
paras = medianParas
paras[pIdx] = paraSamples[cutIdx,pIdx]
tempt = simulateUnitSingle(paras, nSim, modelName, cb, blockDuration)
auc_[cutIdx, pIdx] = tempt$auc
aucSD_[cutIdx, pIdx] = tempt$aucSD
wtw_[ , cutIdx, pIdx] = tempt$wtw
wtwSD_[ , cutIdx, pIdx] = tempt$wtwSD
auc1_[cutIdx, pIdx] = tempt$auc1
auc2_[cutIdx, pIdx] = tempt$auc2
auc3_[cutIdx, pIdx] = tempt$auc3
aucSD1_[cutIdx, pIdx] = tempt$aucSD1
aucSD2_[cutIdx, pIdx] = tempt$aucSD2
aucSD3_[cutIdx, pIdx] = tempt$aucSD3
reRate_[cutIdx, pIdx] = tempt$reRate
}
}
# reorganizd the data
junk = paraNames[1:5]; junk[2] = "nega"
colnames(auc_) = junk
colnames(aucSD_) = junk
junk1 = auc_ %>% as_tibble() %>%
mutate("percentile" = rep(1:nCut, 1)) %>%
gather(key = para, value = auc, -percentile) %>%
mutate(para = factor(para, levels = junk))
junk2 =  aucSD_ %>% as_tibble() %>%
mutate("percentile" = rep(1:nCut, 1)) %>%
gather(key = para, value = aucSD, -percentile) %>%
mutate(para = factor(para, levels = junk))
data.frame(junk1, aucSD = junk2$aucSD) %>%
mutate(min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(percentile, auc)) + geom_point() +
geom_errorbar(aes(ymin = min, ymax = max)) + facet_grid(~para) +
ylab("AUC (s)") + xlab("Value (a.u.)") + ggtitle(cb[1]) +
myTheme
# I would like to know how much the results change
dimnames(wtw_) = list(tGrid + 1, 1:nCut, junk)
library("driver")
gather_array(wtw_, wtw, "t", "paraValue", "para") %>%
mutate(paraValue = as.factor(paraValue),
para = factor(para,labels = junk)) %>%
ggplot(aes(t, wtw,  color = paraValue)) + geom_line() +
facet_wrap(para~.)
# plot the change the wtw1 in the first, mindle and last 20 seconds
wtw1 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[1:60]))
wtw2 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[61:120]))
# plot the change the wtw1 in the first, mindle and last 20 seconds
wtw1 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[1:60]))
wtw2 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[61:120]))
wtw3 = apply(wtw_, MARGIN = c(2,3), FUN = function(x) mean(x[121: 181]))
wtwSD1 = apply(wtwSD_, MARGIN = c(2,3), FUN = function(x) mean(x[1:60]))
wtwSD2 = apply(wtwSD_, MARGIN = c(2,3), FUN = function(x) mean(x[61:120]))
wtwSD3 = apply(wtwSD_, MARGIN = c(2,3), FUN = function(x) mean(x[121: 181]))
data.frame(wtw = c(as.vector(wtw1),as.vector(wtw2),as.vector(wtw3)),
wtwSD = c(as.vector(wtwSD1), as.vector(wtwSD2), as.vector(wtwSD3)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = wtw - wtwSD, max = wtw + wtwSD) %>%
ggplot(aes(time, wtw, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
data.frame(auc = c(as.vector(auc1_),as.vector(auc2_),as.vector(auc3_)),
aucSD = c(as.vector(aucSD1_), as.vector(aucSD2_), as.vector(aucSD3_)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(time, auc, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
data.frame(wtw = c(as.vector(wtw1),as.vector(wtw2),as.vector(wtw3)),
wtwSD = c(as.vector(wtwSD1), as.vector(wtwSD2), as.vector(wtwSD3)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = wtw - wtwSD, max = wtw + wtwSD) %>%
ggplot(aes(time, wtw, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
data.frame(auc = c(as.vector(auc1_),as.vector(auc2_),as.vector(auc3_)),
aucSD = c(as.vector(aucSD1_), as.vector(aucSD2_), as.vector(aucSD3_)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(time, auc, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
as.vector(aucSD3_)
aucSD3_
data.frame(auc = c(as.vector(auc1_),as.vector(auc2_),as.vector(auc3_)),
aucSD = c(as.vector(aucSD1_), as.vector(aucSD2_), as.vector(aucSD3_)),
paraValue = rep(rep(1 : nCut, nPara -1), 3),
para = rep(rep(paraNames[1:5], each = nCut), 3),
time = rep(1:3, each = nCut * (nPara - 1))) %>%
mutate(para = factor(para, levels = paraNames[1:5]),
paraValue = factor(paraValue),
min = auc - aucSD, max = auc + aucSD) %>%
ggplot(aes(time, auc, color = paraValue)) + geom_line() +
geom_point() +
facet_grid(~para)
